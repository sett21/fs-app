# ===== CUDA 12.1 + cuDNN8 runtime (Ubuntu 22.04) =====
FROM nvidia/cuda:12.1.1-cudnn8-runtime-ubuntu22.04

# Общие переменные окружения
ENV DEBIAN_FRONTEND=noninteractive \
    PIP_NO_CACHE_DIR=1 PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PYTHONUNBUFFERED=1 HF_HUB_ENABLE_HF_TRANSFER=0 \
    TRANSFORMERS_NO_TORCHVISION=1 TORCHVISION_DISABLE_NMS_EXPORT=1 \
    TOKENIZERS_PARALLELISM=false PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:128 \
    OMP_NUM_THREADS=1 OPENBLAS_NUM_THREADS=1 MKL_NUM_THREADS=1

# Важно: чтобы динамический загрузчик видел CUDA/compat либы
ENV LD_LIBRARY_PATH=/usr/local/cuda/lib64:/usr/local/cuda/compat/lib:/usr/lib/x86_64-linux-gnu:${LD_LIBRARY_PATH}

# Системные зависимости
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 python3-pip python3-dev git curl ca-certificates \
    libgl1 libglib2.0-0 build-essential && \
    rm -rf /var/lib/apt/lists/*

# ---------- Глобальный constraint: не даём NumPy уйти в 2.x ----------
RUN printf "numpy<2\n" > /etc/pip-constraints.txt && \
    printf "[global]\nconstraint = /etc/pip-constraints.txt\n" > /etc/pip.conf

# Свежий pip + зафиксированный NumPy (совместим со многими бинарными колёсами)
RUN python3 -m pip install --upgrade pip && \
    pip3 install --no-cache-dir numpy==1.26.4

# PyTorch/xformers под CUDA 12.1
RUN pip3 install --no-cache-dir \
      torch==2.3.1 torchvision==0.18.1 \
      --index-url https://download.pytorch.org/whl/cu121 && \
    pip3 install --no-cache-dir \
      xformers==0.0.27.post2 \
      --index-url https://download.pytorch.org/whl/cu121 && \
    pip3 uninstall -y torchvision || true

# ---- ONNX Runtime GPU: именно сборка под CUDA12 с официального индекса ORT ----
RUN pip3 uninstall -y onnxruntime onnxruntime-gpu || true && \
    pip3 install --no-cache-dir \
      --extra-index-url https://download.onnxruntime.ai/ \
      onnxruntime-gpu==1.18.0

# Остальной стек
RUN pip3 install --no-cache-dir --upgrade-strategy only-if-needed \
      fastapi==0.115.0 uvicorn[standard]==0.30.6 \
      pillow==10.4.0 opencv-python-headless==4.10.0.84 \
      mediapipe==0.10.14 insightface==0.7.3 \
      diffusers==0.30.0 transformers==4.44.2 accelerate==0.34.2 \
      protobuf==4.25.3 safetensors==0.4.5 python-multipart==0.0.9

# Проверка прямо на этапе сборки (поймает неверный wheel ORT)
RUN python3 - <<'PY'
import numpy, onnxruntime as ort
print("NumPy:", numpy.__version__)
prov = ort.get_available_providers()
print("ORT providers:", prov)
assert numpy.__version__.startswith("1."), "NumPy drifted to 2.x"
assert "CUDAExecutionProvider" in prov, f"CUDA EP not available: {prov}"
PY

# Приложение
WORKDIR /app
ENV PYTHONPATH=/app
COPY . /app/
EXPOSE 8081

CMD ["python3", "-m", "uvicorn", "gen.server.main:app", "--host", "0.0.0.0", "--port", "8081", "--log-level", "info", "--access-log", "--timeout-keep-alive", "120", "--timeout-graceful-shutdown", "120"]
